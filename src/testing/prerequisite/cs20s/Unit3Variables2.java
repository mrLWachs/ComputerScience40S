
/** Required package class namespace */
package testing.prerequisite.cs20s;


/**
 * Unit3Variables2.java - this is a Visual Studio (C#) Windows Form
 * adaptation into NetBeans (Java) JFrame (some code may not translate)
 *
 * @author Mr. Wachs
 * @since Feb 22, 2024, 2:59:03â€¯p.m.
 */
public class Unit3Variables2 extends javax.swing.JFrame 
{
    
    // This is a comment

    // You can make comments in your programs by typing "//" and 
    // then typing and everything after the two "//" is considered
    // a comment. Comments are NOT code, they appear in green, they
    // are used to leave notes to yourself or other programmers
    // (or teachers), and you can write what you want because the
    // computer ignores comments

    // I encourage you to add as many comments to your code as you
    // like (it will help you learn) you will never lose marks for
    // OVER commenting code

    // What is REQUIRED (for marks) in comments is the following
    // comment at the top of all programming solutions
    // (assignments) starting with variables assignment 3 and
    // ongoing...


    // NAME:            Your name
    // DATE:            October 2022
    // TEACHER:         Mr. Wachs
    // ASSIGNMENT:      Variables Example 2
    // PURPOSE:         Here you can type what the assignment was
    //                  (be brief) and/or tell me how the assignment
    //                  went for you (like a journal) ~ 1 sentence
    
    
    
    // This is the space we create global variables
    // always under the words "public partial class"
    // and the opening "{" curly bracket. Global 
    // variables are "alive" for all code and remember
    // their values for the entire run of the program

    String value = "";

    // Global variables can NOT be assigned complicated
    // values (like reading from a textbox) when created
    // they can only be assigned simple values

    int number = 0;

    final int DOUBLE = 2;   // This is a constant

    // Constants are 'variables' that do NOT change (in
    // other words, the value stays 'constant'). They are
    // created (declared) the same way as other variables,
    // but use the word "const" at the front of the line to
    // 'lock' the variable value. They also use a different
    // style and write in ALL_CAPS (with a underscore if 
    // you need to separate words)

    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    /** 
     * Default constructor, creates new form Unit3Variables2 
     */
    public Unit3Variables2() {
        initComponents();        
        this.getContentPane().setLayout(null);
        this.setTitle("Unit 3 Variables 2");
        this.setSize(210, 280);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInput = new javax.swing.JTextField();
        btnAdd2 = new javax.swing.JButton();
        btnDoubleIt = new javax.swing.JButton();
        btnAdd4 = new javax.swing.JButton();
        lblOutput = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInputKeyReleased(evt);
            }
        });
        getContentPane().add(txtInput);
        txtInput.setBounds(20, 20, 156, 22);

        btnAdd2.setText("ADD 2");
        btnAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd2);
        btnAdd2.setBounds(20, 50, 156, 23);

        btnDoubleIt.setText("Double It");
        btnDoubleIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoubleItActionPerformed(evt);
            }
        });
        getContentPane().add(btnDoubleIt);
        btnDoubleIt.setBounds(20, 110, 156, 23);

        btnAdd4.setText("ADD 4");
        btnAdd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd4);
        btnAdd4.setBounds(20, 80, 156, 23);

        lblOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblOutput);
        lblOutput.setBounds(20, 140, 160, 110);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // </editor-fold>
    
    private void btnAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd2ActionPerformed
        // This is the add 2 button...

        number = number + 2;

        // You often see code where a variable "changes"
        // itself like the line "number = number + 2;"
        // where the variable adds on to itself

        lblOutput.setText("Add 2 = " + number);
    }//GEN-LAST:event_btnAdd2ActionPerformed

    private void btnAdd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd4ActionPerformed
        // This is the code for the add 4 button
        number = number + 4;
        lblOutput.setText("Add 4 = " + number);
    }//GEN-LAST:event_btnAdd4ActionPerformed

    private void btnDoubleItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoubleItActionPerformed
        // Challenge (with frozen screen) is to make this 
        // code work - with the constant...
        number = number * DOUBLE;
        lblOutput.setText("Double it = " + number);
    }//GEN-LAST:event_btnDoubleItActionPerformed

    private void txtInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyReleased
        // This is the code for the textbox, and it runs
        // every time the textbox changes in some way when 
        // the user types in the textbox

        value = txtInput.getText();
        
        // ADDED ERROR CATCH CODE
        if (value == null || value.equals("")) return;

        // The line above reads the text out of the textbox
        // and remembers it in the global variable "value"

        number = Integer.parseInt(value);

        // The line above (a hard line to understand) means
        // it converts the text into a number (an integer)
        // from the value variable I used on the other line

        lblOutput.setText("Number is " + number);

        // The line above takes the number variable and 
        // attaches it (concatinates) to some words in
        // quotes and puts all those words into the label
    }//GEN-LAST:event_txtInputKeyReleased

    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd2;
    private javax.swing.JButton btnAdd4;
    private javax.swing.JButton btnDoubleIt;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables
    
    // </editor-fold>
    
}
