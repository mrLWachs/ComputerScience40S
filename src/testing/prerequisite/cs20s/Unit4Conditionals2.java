
/** Required package class namespace */
package testing.prerequisite.cs20s;

import java.util.Random;
import javax.swing.JOptionPane;


/**
 * Unit4Conditionals2.java - this is a Visual Studio (C#) Windows Form
 * adaptation into NetBeans (Java) JFrame (some code may not translate)
 *
 * @author Mr. Wachs
 * @since Feb 22, 2024, 3:16:19â€¯p.m.
 */
public class Unit4Conditionals2 extends javax.swing.JFrame 
{

    // Global Variable Area:
    // =====================

    int number1 = 0;        // Remembers the first number
    int number2 = 0;        // Remembers the second number
    int guesses = 0;        // Remembers how many guesses the user has made

    // Global variables (or "globals") have to start at 0 (zero)
    // for integer and doubles or "" (nothing) for strings
    
    
    
    /** 
     * Default constructor, creates new form Unit4Conditionals2 
     */
    public Unit4Conditionals2() {
        initComponents();        
        this.getContentPane().setLayout(null);        
        this.setTitle("Unit 4 Conditional Statements 2");
        this.setSize(400, 340);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        // This is the code that runs before the form appears
        // you get to this code by double clicking an empty
        // spot on the form (I recommend the bottom right corner)

        // Welcome our user...

        JOptionPane.showMessageDialog(this, "Hi, time to guess...");
        
        
        // Pick 2 random numbers and store them (remember them) in
        // out globals but first we need to create a random number
        // generator to do this...

        // The following line creates a random number generator:

        Random random = new Random();

        // Now use the generator...
        // (remember the 2nd number is always one more)

        number1 = random.nextInt(6 - 1) + 1; 
        number2 = random.nextInt(4 - 1) + 1; 

        // Set the "focus" (means the program "goes" to that thing)
        txtFirst.requestFocus();        
        
    }

    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInfo1 = new javax.swing.JLabel();
        lblFirst = new javax.swing.JLabel();
        lblInfo2 = new javax.swing.JLabel();
        lblSecond = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        txtFirst = new javax.swing.JTextField();
        txtSecond = new javax.swing.JTextField();
        btnGuess = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        lblInfo1.setText("Guess a number between 1 and 5");
        getContentPane().add(lblInfo1);
        lblInfo1.setBounds(10, 20, 250, 35);

        lblFirst.setText("First guess was...");
        getContentPane().add(lblFirst);
        lblFirst.setBounds(10, 60, 250, 35);

        lblInfo2.setText("Guess a number between 1 and 3");
        getContentPane().add(lblInfo2);
        lblInfo2.setBounds(10, 100, 250, 35);

        lblSecond.setText("Second guess was...");
        getContentPane().add(lblSecond);
        lblSecond.setBounds(10, 140, 250, 35);

        lblNumber.setText("Number of guesses = ");
        getContentPane().add(lblNumber);
        lblNumber.setBounds(10, 190, 250, 35);
        getContentPane().add(txtFirst);
        txtFirst.setBounds(270, 20, 100, 30);
        getContentPane().add(txtSecond);
        txtSecond.setBounds(270, 100, 100, 30);

        btnGuess.setText("GUESS");
        btnGuess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuessActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuess);
        btnGuess.setBounds(10, 240, 360, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // </editor-fold>
    
    private void btnGuessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuessActionPerformed
        // Code for the Guess button...

        // Retrieve the user's guess from the two textboxes
        // this means we get the "text" then convert it to
        // a number (we have done this in the last unit) - 
        // this time we will do it all at once in one line

        int guess1 = Integer.parseInt(txtFirst.getText());
        int guess2 = Integer.parseInt(txtSecond.getText()); 

        // TIP: You can bring "autocomplete" (intellisense)
        // back at any time by pressing CTRL + SPACE

        // Create True/False boolean variables to remember
        // if we guessed each (these are also known as "flags")

        boolean gotFirst = false;
        boolean gotSecond = false;

        // Now we check the first number vs. the first guess
        // using a conditional (if) statement

        if (guess1 == number1)
        {
            // User got the first, flag it and tell the user
            gotFirst = true;
            lblFirst.setText("Correct!");
        }
        else if (guess1 < number1)
        {
            // Give the user a hint
            lblFirst.setText("Too low");
        }
        else if (guess1 > number1)
        {
            // Give the user another hint
            lblFirst.setText("Too high");
        }

        // The "else if" makes the code decide multiple "conditions"
        // or multiple "decisions". You can add as many "else if" (each
        // with its own 'test') as you want. You also have the option to
        // add a "else" at the end (but that is not necessary)

        // Now the same logic all over again, but with the second number
        // and the second text box. TIP: use the copy/paste (CTRL + C 
        // and CTRL + V) and find/replace (CTRL + H) to speed up coding

        if (guess2 == number2)
        {
            gotSecond = true;
            lblSecond.setText("Correct!");
        }
        else if (guess2 < number2)
        {
            lblSecond.setText("Too low");
        }
        else if (guess2 > number2)
        {
            lblSecond.setText("Too high");
        }

        // Check to see if we are done (meaning we got both
        // numbers) use some combined logic:

        if (gotFirst == true && gotSecond == true)
        {
            // The symbol "&&" means "and" logically
            // Means BOTH things have to be true for
            // the entire test to be true

            JOptionPane.showMessageDialog(this, "You win!");
        }
        else if (gotFirst == true || gotSecond == true)
        {
            // The symbol "||" means "or" logically
            // Means EITHER things have to be true for
            // the entire test to be true

            JOptionPane.showMessageDialog(this, "You got one!");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Incorrect");
        }

        // Count this as a guess
        guesses = guesses + 1;

        // Display the guesses to the user...
        lblNumber.setText("Number of guesses = " + guesses);

    }//GEN-LAST:event_btnGuessActionPerformed
    
    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuess;
    private javax.swing.JLabel lblFirst;
    private javax.swing.JLabel lblInfo1;
    private javax.swing.JLabel lblInfo2;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblSecond;
    private javax.swing.JTextField txtFirst;
    private javax.swing.JTextField txtSecond;
    // End of variables declaration//GEN-END:variables

    // </editor-fold>
    
}
