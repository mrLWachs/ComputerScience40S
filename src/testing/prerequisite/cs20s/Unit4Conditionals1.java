
/** Required package class namespace */
package testing.prerequisite.cs20s;

/** Required API imports */
import javax.swing.JOptionPane;


/**
 * Unit4Conditionals1.java - this is a Visual Studio (C#) Windows Form
 * adaptation into NetBeans (Java) JFrame (some code may not translate)
 *
 * @author Mr. Wachs
 * @since Feb 22, 2024, 3:16:12â€¯p.m.
 */
public class Unit4Conditionals1 extends javax.swing.JFrame 
{

    // GLOBAL VARIABLES:
    // =================
    // Which are created under the words "public partial class..." 
    // AND after the opening curly bracket " { "

    int sum = 0;    // Used for adding up a running total
    int count = 0;  // Used to count how many
    
    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    /** 
     * Default constructor, creates new form Unit4Conditionals1 
     */
    public Unit4Conditionals1() {
        initComponents();        
        this.getContentPane().setLayout(null);        
        this.setTitle("Unit 4 Conditional Statements 1");
        this.setSize(260, 260);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInput = new javax.swing.JTextField();
        btnEnter = new javax.swing.JButton();
        btnCount = new javax.swing.JButton();
        lblOutput = new javax.swing.JLabel();
        chkSeeSum = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(txtInput);
        txtInput.setBounds(20, 20, 200, 22);

        btnEnter.setText("ENTER VALUE");
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnter);
        btnEnter.setBounds(20, 50, 200, 23);

        btnCount.setText("COUNT VALUES");
        btnCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCountActionPerformed(evt);
            }
        });
        getContentPane().add(btnCount);
        btnCount.setBounds(20, 90, 200, 23);

        lblOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOutput.setText("answer here...");
        getContentPane().add(lblOutput);
        lblOutput.setBounds(20, 130, 200, 40);

        chkSeeSum.setSelected(true);
        chkSeeSum.setText("See Sum");
        chkSeeSum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSeeSumActionPerformed(evt);
            }
        });
        getContentPane().add(chkSeeSum);
        chkSeeSum.setBounds(20, 180, 200, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // </editor-fold>
    
    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        // The user has clicked this enter button...

        // Read the text out of the textbox, and store (remember it) in a
        // variable that we create (declare)
        // NOTE: we have seen this code before (in the last unit- variables)

        String value = txtInput.getText();

        // Now make a "decision" (which means we write an "if" statement  
        // or a conditional statement) which uses code to ask the question:
        // "Did the user leave the textbox empty or not?"
        // and only do something (execute code) if the answer is yes (true)

        // NOTE: if statements do NOT use semicolons ";" but they DO use 
        // round brackets "( )" AND curly brackets "{ }" they also INDENT 
        // the code between the two curly brackets

        if (value.equals(""))
        {

            JOptionPane.showMessageDialog(this, "You need to enter something");
            System.exit(0);     // Shuts everything down

            // The code between two "{ }" curly brackets is said to be in
            // a "block" (like a button or a if statement) and that code
            // is indented

        }
        else
        {

            // The "else" statement is written after the "{" bracket of 
            // the "if" and has its own block (and does not need a test)

            // Now going to convert into a number (seen before in last unit)

            int number = Integer.parseInt(value);

            // Add that number to our global running sum, using a line of 
            // code that programmers often use to add a variable onto itself

            sum = sum + number;

            // Also increase the global count by one (similar line of code)

            count = count + 1;

            // Now display this to the user (code we have seen before)

            lblOutput.setText("Sum = " + sum);

        }       
    }//GEN-LAST:event_btnEnterActionPerformed

    private void btnCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCountActionPerformed
        // Simple "if" to check (test) that at least one number
            // has been entered...
            
        if (count >= 1)
        {
            JOptionPane.showMessageDialog(this, "You have entered " + count + " values");
        }
    }//GEN-LAST:event_btnCountActionPerformed

    private void chkSeeSumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSeeSumActionPerformed
        // Make a decision if the checkbox is checked (or not),
        // if it is checked then make the label visible, otherwise
        // (else) make the label not visible (invisible)

        if (chkSeeSum.isSelected() == true)
        {
            lblOutput.setVisible(true);
        }
        else
        {
            lblOutput.setVisible(false);
        } 
    }//GEN-LAST:event_chkSeeSumActionPerformed
    
    // <editor-fold defaultstate="collapsed" desc="NetBeans Generated Code">
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCount;
    private javax.swing.JButton btnEnter;
    private javax.swing.JCheckBox chkSeeSum;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables

    // </editor-fold>
    
}
